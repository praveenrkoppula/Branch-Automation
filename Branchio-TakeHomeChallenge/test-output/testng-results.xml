<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="3" ignored="0" total="10" passed="7">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="16575" started-at="2018-09-06T20:45:37Z" finished-at="2018-09-06T20:45:53Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="16575" started-at="2018-09-06T20:45:37Z" finished-at="2018-09-06T20:45:53Z">
      <class name="branch.Branch">
        <test-method status="PASS" signature="setUp()[pri:0, instance:branch.Branch@57c758ac]" name="setUp" is-config="true" duration-ms="254" started-at="2018-09-06T20:45:36Z" finished-at="2018-09-06T20:45:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="init()[pri:0, instance:branch.Branch@57c758ac]" name="init" is-config="true" duration-ms="1661" started-at="2018-09-06T20:45:37Z" finished-at="2018-09-06T20:45:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="ClickAndVerifyLinkOfCategoryTabs()[pri:0, instance:branch.Branch@57c758ac]" name="ClickAndVerifyLinkOfCategoryTabs" duration-ms="28" started-at="2018-09-06T20:45:38Z" finished-at="2018-09-06T20:45:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickAndVerifyLinkOfCategoryTabs -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:branch.Branch@57c758ac]" name="getResult" is-config="true" duration-ms="17" started-at="2018-09-06T20:45:38Z" finished-at="2018-09-06T20:45:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickAndVerifyLinkOfCategoryTabs status=SUCCESS method=Branch.ClickAndVerifyLinkOfCategoryTabs()[pri:0, instance:branch.Branch@57c758ac] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="FAIL" signature="ClickTeamLinkAtBottom()[pri:0, instance:branch.Branch@57c758ac]" name="ClickTeamLinkAtBottom" duration-ms="91" started-at="2018-09-06T20:45:38Z" finished-at="2018-09-06T20:45:39Z">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"css selector","selector":"a[href='https://branch.io/team/#all']"}
  (Session info: chrome=68.0.3440.106)
  (Driver info: chromedriver=2.40.565386 (45a059dc425e08165f9a10324bd1380cc13ca363),platform=Mac OS X 10.11.6 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z'
System info: host: 'Prashants-MacBook-Pro.local', ip: '2620:0:1000:fd1f:5c5a:db65:52e0:1dba%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.11.6', java.version: '1.8.0_181'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.40.565386 (45a059dc425e08..., userDataDir: /var/folders/02/_rzdty615yb...}, cssSelectorsEnabled: true, databaseEnabled: false, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 68.0.3440.106, webStorageEnabled: true}
Session ID: 892576784292079dd25a9526df37a622
*** Element info: {Using=css selector, value=a[href='https://branch.io/team/#all']}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":"a[href='https://branch.io/team/#all']"}
  (Session info: chrome=68.0.3440.106)
  (Driver info: chromedriver=2.40.565386 (45a059dc425e08165f9a10324bd1380cc13ca363),platform=Mac OS X 10.11.6 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z'
System info: host: 'Prashants-MacBook-Pro.local', ip: '2620:0:1000:fd1f:5c5a:db65:52e0:1dba%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.11.6', java.version: '1.8.0_181'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.40.565386 (45a059dc425e08..., userDataDir: /var/folders/02/_rzdty615yb...}, cssSelectorsEnabled: true, databaseEnabled: false, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 68.0.3440.106, webStorageEnabled: true}
Session ID: 892576784292079dd25a9526df37a622
*** Element info: {Using=css selector, value=a[href='https://branch.io/team/#all']}
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:548)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:322)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByCssSelector(RemoteWebDriver.java:416)
at org.openqa.selenium.By$ByCssSelector.findElement(By.java:431)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:314)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy12.getWrappedElement(Unknown Source)
at org.openqa.selenium.remote.internal.WebElementToJsonConverter.apply(WebElementToJsonConverter.java:50)
at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
at java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)
at org.openqa.selenium.remote.RemoteWebDriver.executeScript(RemoteWebDriver.java:480)
at branch.Branch.ClickTeamLinkAtBottom(Branch.java:88)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickTeamLinkAtBottom -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:branch.Branch@57c758ac]" name="getResult" is-config="true" duration-ms="6" started-at="2018-09-06T20:45:39Z" finished-at="2018-09-06T20:45:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickTeamLinkAtBottom status=FAILURE method=Branch.ClickTeamLinkAtBottom()[pri:0, instance:branch.Branch@57c758ac] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="FAIL" signature="ComparingCategoryNamesOfemployees()[pri:0, instance:branch.Branch@57c758ac]" name="ComparingCategoryNamesOfemployees" duration-ms="4" started-at="2018-09-06T20:45:39Z" finished-at="2018-09-06T20:45:39Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at baseFunctions.BusinessLayer.ComparingCategoryNameOfemployees(BusinessLayer.java:95)
at branch.Branch.ComparingCategoryNamesOfemployees(Branch.java:132)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ComparingCategoryNamesOfemployees -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:branch.Branch@57c758ac]" name="getResult" is-config="true" duration-ms="1" started-at="2018-09-06T20:45:39Z" finished-at="2018-09-06T20:45:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ComparingCategoryNamesOfemployees status=FAILURE method=Branch.ComparingCategoryNamesOfemployees()[pri:0, instance:branch.Branch@57c758ac] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="FAIL" signature="EmployeesMissingUnderCategories()[pri:0, instance:branch.Branch@57c758ac]" name="EmployeesMissingUnderCategories" duration-ms="2" started-at="2018-09-06T20:45:39Z" finished-at="2018-09-06T20:45:39Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at baseFunctions.BusinessLayer.ComparingEmployeesName_FromAllTabVsCategoryTab(BusinessLayer.java:60)
at branch.Branch.EmployeesMissingUnderCategories(Branch.java:125)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EmployeesMissingUnderCategories -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:branch.Branch@57c758ac]" name="getResult" is-config="true" duration-ms="2" started-at="2018-09-06T20:45:39Z" finished-at="2018-09-06T20:45:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=EmployeesMissingUnderCategories status=FAILURE method=Branch.EmployeesMissingUnderCategories()[pri:0, instance:branch.Branch@57c758ac] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="GetCategoryAndEmployeesList()[pri:0, instance:branch.Branch@57c758ac]" name="GetCategoryAndEmployeesList" duration-ms="48" started-at="2018-09-06T20:45:39Z" finished-at="2018-09-06T20:45:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetCategoryAndEmployeesList -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:branch.Branch@57c758ac]" name="getResult" is-config="true" duration-ms="1" started-at="2018-09-06T20:45:39Z" finished-at="2018-09-06T20:45:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=GetCategoryAndEmployeesList status=SUCCESS method=Branch.GetCategoryAndEmployeesList()[pri:0, instance:branch.Branch@57c758ac] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="NavigatingToHomePageByClickingCompanyLogo()[pri:0, instance:branch.Branch@57c758ac]" name="NavigatingToHomePageByClickingCompanyLogo" duration-ms="24" started-at="2018-09-06T20:45:39Z" finished-at="2018-09-06T20:45:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatingToHomePageByClickingCompanyLogo -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:branch.Branch@57c758ac]" name="getResult" is-config="true" duration-ms="1" started-at="2018-09-06T20:45:39Z" finished-at="2018-09-06T20:45:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=NavigatingToHomePageByClickingCompanyLogo status=SUCCESS method=Branch.NavigatingToHomePageByClickingCompanyLogo()[pri:0, instance:branch.Branch@57c758ac] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="OpenBranchSiteAndVerifyURL()[pri:0, instance:branch.Branch@57c758ac]" name="OpenBranchSiteAndVerifyURL" duration-ms="8930" started-at="2018-09-06T20:45:39Z" finished-at="2018-09-06T20:45:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OpenBranchSiteAndVerifyURL -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:branch.Branch@57c758ac]" name="getResult" is-config="true" duration-ms="1" started-at="2018-09-06T20:45:48Z" finished-at="2018-09-06T20:45:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=OpenBranchSiteAndVerifyURL status=SUCCESS method=Branch.OpenBranchSiteAndVerifyURL()[pri:0, instance:branch.Branch@57c758ac] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="Print_CoFoundersNames()[pri:0, instance:branch.Branch@57c758ac]" name="Print_CoFoundersNames" duration-ms="2" started-at="2018-09-06T20:45:48Z" finished-at="2018-09-06T20:45:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Print_CoFoundersNames -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:branch.Branch@57c758ac]" name="getResult" is-config="true" duration-ms="0" started-at="2018-09-06T20:45:48Z" finished-at="2018-09-06T20:45:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Print_CoFoundersNames status=SUCCESS method=Branch.Print_CoFoundersNames()[pri:0, instance:branch.Branch@57c758ac] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="VerifyEmployeeCount_FromCategoryTabsVsAllTab()[pri:0, instance:branch.Branch@57c758ac]" name="VerifyEmployeeCount_FromCategoryTabsVsAllTab" duration-ms="34" started-at="2018-09-06T20:45:48Z" finished-at="2018-09-06T20:45:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyEmployeeCount_FromCategoryTabsVsAllTab -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:branch.Branch@57c758ac]" name="getResult" is-config="true" duration-ms="1" started-at="2018-09-06T20:45:48Z" finished-at="2018-09-06T20:45:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyEmployeeCount_FromCategoryTabsVsAllTab status=SUCCESS method=Branch.VerifyEmployeeCount_FromCategoryTabsVsAllTab()[pri:0, instance:branch.Branch@57c758ac] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="VerifyRequestDemoURL_FromDifferentScreens()[pri:0, instance:branch.Branch@57c758ac]" name="VerifyRequestDemoURL_FromDifferentScreens" duration-ms="5523" started-at="2018-09-06T20:45:48Z" finished-at="2018-09-06T20:45:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyRequestDemoURL_FromDifferentScreens -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:branch.Branch@57c758ac]" name="getResult" is-config="true" duration-ms="1" started-at="2018-09-06T20:45:53Z" finished-at="2018-09-06T20:45:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyRequestDemoURL_FromDifferentScreens status=SUCCESS method=Branch.VerifyRequestDemoURL_FromDifferentScreens()[pri:0, instance:branch.Branch@57c758ac] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="CloseBrowser()[pri:0, instance:branch.Branch@57c758ac]" name="CloseBrowser" is-config="true" duration-ms="87" started-at="2018-09-06T20:45:53Z" finished-at="2018-09-06T20:45:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CloseBrowser -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:branch.Branch@57c758ac]" name="tearDown" is-config="true" duration-ms="541" started-at="2018-09-06T20:45:54Z" finished-at="2018-09-06T20:45:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- branch.Branch -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
