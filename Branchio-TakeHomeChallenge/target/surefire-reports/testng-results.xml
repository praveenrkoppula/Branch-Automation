<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" ignored="0" total="10" passed="8">
  <reporter-output>
  </reporter-output>
  <suite name="Branch Automation tests" duration-ms="125230" started-at="2018-09-06T21:52:52Z" finished-at="2018-09-06T21:54:58Z">
    <groups>
    </groups>
    <test name="Regression test" duration-ms="125230" started-at="2018-09-06T21:52:52Z" finished-at="2018-09-06T21:54:58Z">
      <class name="branch.Branch">
        <test-method status="PASS" signature="setUp()[pri:0, instance:branch.Branch@6df97b55]" name="setUp" is-config="true" duration-ms="101" started-at="2018-09-06T21:52:52Z" finished-at="2018-09-06T21:52:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="init()[pri:0, instance:branch.Branch@6df97b55]" name="init" is-config="true" duration-ms="2110" started-at="2018-09-06T21:52:52Z" finished-at="2018-09-06T21:52:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="OpenBranchSiteAndVerifyURL()[pri:0, instance:branch.Branch@6df97b55]" name="OpenBranchSiteAndVerifyURL" duration-ms="11415" started-at="2018-09-06T21:52:54Z" finished-at="2018-09-06T21:53:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OpenBranchSiteAndVerifyURL -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:branch.Branch@6df97b55]" name="getResult" is-config="true" duration-ms="5" started-at="2018-09-06T21:53:06Z" finished-at="2018-09-06T21:53:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=OpenBranchSiteAndVerifyURL status=SUCCESS method=Branch.OpenBranchSiteAndVerifyURL()[pri:0, instance:branch.Branch@6df97b55] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="ClickTeamLinkAtBottom()[pri:0, instance:branch.Branch@6df97b55]" name="ClickTeamLinkAtBottom" duration-ms="4624" started-at="2018-09-06T21:53:06Z" finished-at="2018-09-06T21:53:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickTeamLinkAtBottom -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:branch.Branch@6df97b55]" name="getResult" is-config="true" duration-ms="0" started-at="2018-09-06T21:53:11Z" finished-at="2018-09-06T21:53:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickTeamLinkAtBottom status=SUCCESS method=Branch.ClickTeamLinkAtBottom()[pri:0, instance:branch.Branch@6df97b55] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="GetCategoryAndEmployeesList()[pri:0, instance:branch.Branch@6df97b55]" name="GetCategoryAndEmployeesList" duration-ms="7234" started-at="2018-09-06T21:53:11Z" finished-at="2018-09-06T21:53:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetCategoryAndEmployeesList -->
        <test-method status="FAIL" signature="VerifyEmployeeCount_FromCategoryTabsVsAllTab()[pri:0, instance:branch.Branch@6df97b55]" name="VerifyEmployeeCount_FromCategoryTabsVsAllTab" duration-ms="10475" started-at="2018-09-06T21:53:18Z" finished-at="2018-09-06T21:53:28Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ Employees count from All tab and Rest of the Tabs doesnt match expected [124] but found [119]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  Employees count from All tab and Rest of the Tabs doesnt match expected [124] but found [119]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:652)
at baseFunctions.BusinessLayer.VerifyEmployeeCount_FromAllTabVsCategoryTab(BusinessLayer.java:46)
at branch.Branch.VerifyEmployeeCount_FromCategoryTabsVsAllTab(Branch.java:102)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:383)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:344)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:417)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyEmployeeCount_FromCategoryTabsVsAllTab -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:branch.Branch@6df97b55]" name="getResult" is-config="true" duration-ms="0" started-at="2018-09-06T21:53:18Z" finished-at="2018-09-06T21:53:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=GetCategoryAndEmployeesList status=SUCCESS method=Branch.GetCategoryAndEmployeesList()[pri:0, instance:branch.Branch@6df97b55] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:branch.Branch@6df97b55]" name="getResult" is-config="true" duration-ms="4" started-at="2018-09-06T21:53:28Z" finished-at="2018-09-06T21:53:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyEmployeeCount_FromCategoryTabsVsAllTab status=FAILURE method=Branch.VerifyEmployeeCount_FromCategoryTabsVsAllTab()[pri:0, instance:branch.Branch@6df97b55] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="FAIL" signature="EmployeesMissingUnderCategories()[pri:0, instance:branch.Branch@6df97b55]" name="EmployeesMissingUnderCategories" duration-ms="3404" started-at="2018-09-06T21:53:28Z" finished-at="2018-09-06T21:53:32Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ Employees details from All tab and Rest of the Tabs doesnt match expected [0] but found [5]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  Employees details from All tab and Rest of the Tabs doesnt match expected [0] but found [5]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:652)
at baseFunctions.BusinessLayer.ComparingEmployeesName_FromAllTabVsCategoryTab(BusinessLayer.java:79)
at branch.Branch.EmployeesMissingUnderCategories(Branch.java:109)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:383)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:344)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:417)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EmployeesMissingUnderCategories -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:branch.Branch@6df97b55]" name="getResult" is-config="true" duration-ms="1" started-at="2018-09-06T21:53:32Z" finished-at="2018-09-06T21:53:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=EmployeesMissingUnderCategories status=FAILURE method=Branch.EmployeesMissingUnderCategories()[pri:0, instance:branch.Branch@6df97b55] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="ComparingCategoryNamesOfemployees()[pri:0, instance:branch.Branch@6df97b55]" name="ComparingCategoryNamesOfemployees" duration-ms="3412" started-at="2018-09-06T21:53:32Z" finished-at="2018-09-06T21:53:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ComparingCategoryNamesOfemployees -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:branch.Branch@6df97b55]" name="getResult" is-config="true" duration-ms="0" started-at="2018-09-06T21:53:35Z" finished-at="2018-09-06T21:53:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ComparingCategoryNamesOfemployees status=SUCCESS method=Branch.ComparingCategoryNamesOfemployees()[pri:0, instance:branch.Branch@6df97b55] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="ClickAndVerifyLinkOfCategoryTabs()[pri:0, instance:branch.Branch@6df97b55]" name="ClickAndVerifyLinkOfCategoryTabs" duration-ms="43117" started-at="2018-09-06T21:53:35Z" finished-at="2018-09-06T21:54:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickAndVerifyLinkOfCategoryTabs -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:branch.Branch@6df97b55]" name="getResult" is-config="true" duration-ms="0" started-at="2018-09-06T21:54:18Z" finished-at="2018-09-06T21:54:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickAndVerifyLinkOfCategoryTabs status=SUCCESS method=Branch.ClickAndVerifyLinkOfCategoryTabs()[pri:0, instance:branch.Branch@6df97b55] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:branch.Branch@6df97b55]" name="getResult" is-config="true" duration-ms="1" started-at="2018-09-06T21:54:18Z" finished-at="2018-09-06T21:54:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Print_CoFoundersNames status=SUCCESS method=Branch.Print_CoFoundersNames()[pri:0, instance:branch.Branch@6df97b55] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="Print_CoFoundersNames()[pri:0, instance:branch.Branch@6df97b55]" name="Print_CoFoundersNames" duration-ms="0" started-at="2018-09-06T21:54:18Z" finished-at="2018-09-06T21:54:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Print_CoFoundersNames -->
        <test-method status="PASS" signature="VerifyRequestDemoURL_FromDifferentScreens()[pri:0, instance:branch.Branch@6df97b55]" name="VerifyRequestDemoURL_FromDifferentScreens" duration-ms="30673" started-at="2018-09-06T21:54:18Z" finished-at="2018-09-06T21:54:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyRequestDemoURL_FromDifferentScreens -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:branch.Branch@6df97b55]" name="getResult" is-config="true" duration-ms="1" started-at="2018-09-06T21:54:49Z" finished-at="2018-09-06T21:54:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyRequestDemoURL_FromDifferentScreens status=SUCCESS method=Branch.VerifyRequestDemoURL_FromDifferentScreens()[pri:0, instance:branch.Branch@6df97b55] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="NavigatingToHomePageByClickingCompanyLogo()[pri:0, instance:branch.Branch@6df97b55]" name="NavigatingToHomePageByClickingCompanyLogo" duration-ms="8581" started-at="2018-09-06T21:54:49Z" finished-at="2018-09-06T21:54:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigatingToHomePageByClickingCompanyLogo -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:branch.Branch@6df97b55]" name="getResult" is-config="true" duration-ms="0" started-at="2018-09-06T21:54:57Z" finished-at="2018-09-06T21:54:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=NavigatingToHomePageByClickingCompanyLogo status=SUCCESS method=Branch.NavigatingToHomePageByClickingCompanyLogo()[pri:0, instance:branch.Branch@6df97b55] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="CloseBrowser()[pri:0, instance:branch.Branch@6df97b55]" name="CloseBrowser" is-config="true" duration-ms="103" started-at="2018-09-06T21:54:57Z" finished-at="2018-09-06T21:54:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CloseBrowser -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:branch.Branch@6df97b55]" name="tearDown" is-config="true" duration-ms="296" started-at="2018-09-06T21:54:58Z" finished-at="2018-09-06T21:54:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- branch.Branch -->
    </test> <!-- Regression test -->
  </suite> <!-- Branch Automation tests -->
</testng-results>
